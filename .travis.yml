language: node_js
node_js:
  - '8'

## Saves having to get modules again if doing multiple builds
cache:
  directories:
    - "node_modules"

## Zip up our project and put into a directory before uploading to s3
before_deploy:
  - zip -q -r latestTravis *
  - mkdir -p s3_upload
  - mv latestTravis.zip s3_upload/latestTravis.zip

## Will upload to different s3 bucket/folders depending upon whether the repo
## is from a gopher dev or from github master.  If the former, then it will
## upload to bucket/testing and deploy to a testing EC2 instance.  If the
## latter, then it will upload to bucket/production and deploy to a production
## EC2 instance.
deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    local_dir: s3_upload
    skip_cleanup: true
    on: &8
      repo: geogopher/geogopher
      all_branches: true
    bucket: gopher-codedeploy
    upload-dir: production
    region: us-east-1
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    local_dir: s3_upload
    skip_cleanup: true
    on: &7
      all_branches: true
    bucket: gopher-codedeploy
    upload-dir: testing
    region: us-east-1
  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    bucket: gopher-codedeploy
    key: testing/latestTravis.zip
    bundle_type: zip
    application: geogopherTesting
    deployment_group: geogopherTestingGroup
    region: us-east-1
    on: *7
  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    bucket: gopher-codedeploy
    key: production/latestTravis.zip
    bundle_type: zip
    application: geogopherProd
    deployment_group: geogopherProdGroup
    region: us-east-1
    on: *8

